# Generated by Django 5.2.7 on 2025-10-21 19:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_etablissement', models.CharField(max_length=20, unique=True)),
                ('nom_etablissement', models.CharField(max_length=200)),
                ('type_etablissement', models.CharField(blank=True, choices=[('siege', 'Siège'), ('agence', 'Agence'), ('succursale', 'Succursale'), ('usine', 'Usine')], max_length=50, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('commune', models.CharField(blank=True, max_length=100, null=True)),
                ('prefecture', models.CharField(blank=True, max_length=100, null=True)),
                ('ville', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('responsable', models.CharField(blank=True, max_length=100, null=True)),
                ('date_ouverture', models.DateField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Établissement',
                'verbose_name_plural': 'Établissements',
                'db_table': 'etablissements',
                'ordering': ['nom_etablissement'],
            },
        ),
        migrations.CreateModel(
            name='Poste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_poste', models.CharField(max_length=20, unique=True)),
                ('intitule_poste', models.CharField(max_length=100)),
                ('categorie_professionnelle', models.CharField(blank=True, choices=[('cadre', 'Cadre'), ('agent_maitrise', 'Agent de maîtrise'), ('employe', 'Employé'), ('ouvrier', 'Ouvrier')], max_length=50, null=True)),
                ('classification', models.CharField(blank=True, help_text='A1, B2, C3, etc.', max_length=10, null=True)),
                ('niveau_requis', models.CharField(blank=True, max_length=100, null=True)),
                ('experience_requise', models.IntegerField(blank=True, help_text='En années', null=True)),
                ('description_poste', models.TextField(blank=True, null=True)),
                ('responsabilites', models.TextField(blank=True, null=True)),
                ('competences_requises', models.TextField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Poste',
                'verbose_name_plural': 'Postes',
                'db_table': 'postes',
                'ordering': ['intitule_poste'],
            },
        ),
        migrations.CreateModel(
            name='ProfilUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_profil', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('niveau_acces', models.IntegerField(choices=[(1, 'Consultation'), (2, 'Opérateur'), (3, 'Manager'), (4, 'RH'), (5, 'Administrateur')], default=1)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
                'db_table': 'profils_utilisateurs',
                'ordering': ['niveau_acces'],
            },
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raison_sociale', models.CharField(max_length=200)),
                ('forme_juridique', models.CharField(blank=True, max_length=50, null=True)),
                ('nif', models.CharField(max_length=50, unique=True, verbose_name='NIF')),
                ('num_cnss_employeur', models.CharField(max_length=50, unique=True, verbose_name='N° CNSS Employeur')),
                ('num_inam', models.CharField(blank=True, max_length=50, null=True, verbose_name='N° INAM')),
                ('adresse', models.TextField(blank=True, null=True)),
                ('commune', models.CharField(blank=True, max_length=100, null=True)),
                ('prefecture', models.CharField(blank=True, max_length=100, null=True)),
                ('ville', models.CharField(blank=True, max_length=100, null=True)),
                ('pays', models.CharField(default='Guinée', max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('site_web', models.URLField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='societe/')),
                ('date_creation', models.DateField(blank=True, null=True)),
                ('capital_social', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('secteur_activite', models.CharField(blank=True, max_length=100, null=True)),
                ('code_ape', models.CharField(blank=True, max_length=10, null=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Société',
                'verbose_name_plural': 'Sociétés',
                'db_table': 'societe',
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('actif', models.BooleanField(default=True)),
                ('date_derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('tentatives_connexion', models.IntegerField(default=0)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='utilisateurs/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.permission', verbose_name='user permissions')),
                ('profil', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs', to='core.profilutilisateur')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'db_table': 'utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LogActivite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('module', models.CharField(blank=True, max_length=50, null=True)),
                ('table_concernee', models.CharField(blank=True, max_length=50, null=True)),
                ('id_enregistrement', models.IntegerField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('adresse_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('date_action', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Log d'activité",
                'verbose_name_plural': "Logs d'activité",
                'db_table': 'logs_activite',
                'ordering': ['-date_action'],
            },
        ),
        migrations.CreateModel(
            name='DroitAcces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(choices=[('employes', 'Employés'), ('paie', 'Paie'), ('temps_travail', 'Temps de travail'), ('conges', 'Congés'), ('formation', 'Formation'), ('recrutement', 'Recrutement'), ('dashboard', 'Tableau de bord'), ('rapports', 'Rapports'), ('parametres', 'Paramètres')], max_length=50)),
                ('lecture', models.BooleanField(default=False)),
                ('ecriture', models.BooleanField(default=False)),
                ('modification', models.BooleanField(default=False)),
                ('suppression', models.BooleanField(default=False)),
                ('validation', models.BooleanField(default=False)),
                ('profil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='droits', to='core.profilutilisateur')),
            ],
            options={
                'verbose_name': "Droit d'accès",
                'verbose_name_plural': "Droits d'accès",
                'db_table': 'droits_acces',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_service', models.CharField(max_length=20, unique=True)),
                ('nom_service', models.CharField(max_length=100)),
                ('niveau_hierarchique', models.IntegerField(default=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
                ('etablissement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.etablissement')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'db_table': 'services',
                'ordering': ['nom_service'],
            },
        ),
    ]
